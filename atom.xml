<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>木水の博客</title>
  
  <subtitle>木水の博客</subtitle>
  <link href="https://admin-zlj.github.io/atom.xml" rel="self"/>
  
  <link href="https://admin-zlj.github.io/"/>
  <updated>2022-03-30T14:52:29.717Z</updated>
  <id>https://admin-zlj.github.io/</id>
  
  <author>
    <name>木水</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>前端初学者node会这些就可以了 Nodejs入门</title>
    <link href="https://admin-zlj.github.io/posts/9917d3f9.html"/>
    <id>https://admin-zlj.github.io/posts/9917d3f9.html</id>
    <published>2022-03-30T14:00:00.000Z</published>
    <updated>2022-03-30T14:52:29.717Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Nodejs"><a href="#Nodejs" class="headerlink" title="Nodejs"></a>Nodejs</h1><h1 id="一、Nodejs介绍与安装"><a href="#一、Nodejs介绍与安装" class="headerlink" title="一、Nodejs介绍与安装"></a>一、Nodejs介绍与安装</h1><blockquote><p>介绍：</p><ol><li>Node 是一个让 JavaScript 运行在服务端的开发平台。</li><li><strong>简单的说 Node.js 就是运行在服务端的 JavaScript。</strong> Node.js 是一个基于Chrome JavaScript 运行时建立的一个平台。</li><li>Node.js是一个事件驱动I/O服务端JavaScript环境，基于Google的V8引擎，V8引擎执行Javascript的速度非常快，性能非常好。</li></ol></blockquote><p>总而言之：<br><font color="#FF4545">Node.js是可以脱离浏览器环境运行的JavaScript程序，且基于V8 引擎</font><br>下载地址： <a href="http://nodejs.cn/">http://nodejs.cn/</a><br>安装：默认安装，无脑下一步<br>查看是否安装成功：</p><pre class="line-numbers language-none"><code class="language-none">node -v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/c61e56a04b684137bb9fb86af3625f72.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAYWRtaW5femxq,size_17,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>再命令行执行命令，如果出现版本号即为安装成功</p><h1 id="二、Nodejs入门"><a href="#二、Nodejs入门" class="headerlink" title="二、Nodejs入门"></a>二、Nodejs入门</h1><h2 id="1-运行的JavaScript程序"><a href="#1-运行的JavaScript程序" class="headerlink" title="1.运行的JavaScript程序"></a>1.运行的JavaScript程序</h2><p>1、创建 helloworld.js</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Hello World!!!'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2、命令行执行命令</p><pre class="line-numbers language-none"><code class="language-none">node helloworld.js<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>运行结果：hello world!!</p><h2 id="2-Node安装依赖包"><a href="#2-Node安装依赖包" class="headerlink" title="2.Node安装依赖包"></a>2.Node安装依赖包</h2><p>命令：</p><pre class="line-numbers language-none"><code class="language-none">npm install 依赖包名<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>示例：</p><pre class="line-numbers language-none"><code class="language-none">npm install mysql (安装mysql依赖)npm install vue (安装vue依赖)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr><h1 id="三、Node-实现请求响应（模拟Taomcat服务器）"><a href="#三、Node-实现请求响应（模拟Taomcat服务器）" class="headerlink" title="三、Node 实现请求响应（模拟Taomcat服务器）"></a>三、Node 实现请求响应（模拟Taomcat服务器）</h1><p>1、创建 httpserver.js ；</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// require是导入模块，这个模块是node内置模块,也可以是自定义模块</span><span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'http'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 创建一个httpserver服务</span>http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">request<span class="token punctuation">,</span>response</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment">//浏览器将 以text-plain去解析数据。</span>    response<span class="token punctuation">.</span><span class="token function">writeHead</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">'Content-type'</span><span class="token operator">:</span><span class="token string">'text/plain'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// 浏览器输出的内容</span>    response<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">"&lt;h1&gt;hello word!!!&lt;/h1&gt;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">8888</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 监听端口8888</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"http://localhpst:8888 启动成功!!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2、运行服务器程序；</p><pre class="line-numbers language-none"><code class="language-none">node httpserver.js<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>3、在浏览器中输入：<a href="http://localhost:8888/">http://localhost:8888</a><br>4、停止服务：ctrl + c</p><pre class="line-numbers language-none"><code class="language-none">浏览器显示：hello word!!!<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Nodejs&quot;&gt;&lt;a href=&quot;#Nodejs&quot; class=&quot;headerlink&quot; title=&quot;Nodejs&quot;&gt;&lt;/a&gt;Nodejs&lt;/h1&gt;&lt;h1 id=&quot;一、Nodejs介绍与安装&quot;&gt;&lt;a href=&quot;#一、Nodejs介绍与安装&quot; class=&quot;he</summary>
      
    
    
    
    <category term="笔记" scheme="https://admin-zlj.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="前端" scheme="https://admin-zlj.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="node.js" scheme="https://admin-zlj.github.io/tags/node-js/"/>
    
  </entry>
  
  <entry>
    <title>初学者福音 轻松拿捏Flex布局，附有九宫格案列</title>
    <link href="https://admin-zlj.github.io/posts/e2294b51.html"/>
    <id>https://admin-zlj.github.io/posts/e2294b51.html</id>
    <published>2022-03-30T10:00:00.000Z</published>
    <updated>2022-03-30T09:32:55.602Z</updated>
    
    <content type="html"><![CDATA[<h1 id="传统布局"><a href="#传统布局" class="headerlink" title="传统布局"></a>传统布局</h1><ul><li><p>基于盒状模型，依赖 display属性 + position属性 + float属性</p></li><li><p>对于那些特殊布局非常不方便，例如：垂直居中就不容易实现。</p><hr></li></ul><h1 id="Flex布局"><a href="#Flex布局" class="headerlink" title="Flex布局"></a>Flex布局</h1><ul><li><p><strong>Flex</strong>是Flexible Box的缩写，意为”<strong>弹性布局</strong>”，用来为盒状模型提供最大的灵活性。<br>  任何一个容器都可以指定为Flex布局。</p></li><li><p>采用Flex布局的元素，称为Flex容器。所有子元素为容器成员，称为flex item。</p></li><li><p>容器默认存在<strong>两根轴</strong>：水平的主轴（<strong>main axis</strong>）和垂直交叉轴（<strong>cross axis</strong>）。<br><font color="red"> 为了方便理解 我称水平主轴为横轴，垂直交叉轴为竖轴</font></p></li></ul><ol><li>主轴的开始位置(如图) ：<strong>main start</strong>，结束位置：<strong>main end</strong>；<ol start="2"><li>垂直交叉轴的开始位置：<strong>cross start</strong>，结束位置：<strong>cross end</strong>。（<strong>项目默认沿主轴排列</strong>）</li><li><strong>单个项目</strong>占据的主轴空间：<strong>main size</strong>，占据的交叉轴空间：<strong>cross size</strong>。</li></ol></li></ol><p><img src="https://img-blog.csdnimg.cn/82dc1e4aa41644b49505ba1fb9a6644a.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAYWRtaW5femxq,size_20,color_FFFFFF,t_70,g_se,x_16#pic_left" alt="在这里插入图片描述"></p><h2 id="一-容器-flex-container-的属性"><a href="#一-容器-flex-container-的属性" class="headerlink" title="一. 容器(flex-container)的属性"></a>一. 容器(flex-container)的属性</h2><p>以下6个属性是设置在容器上的。（<strong>注意：是flex-container的属性，不是flex-item的属性</strong>）</p><blockquote><ol><li>flex-direction </li><li>flex-wrap</li><li>flex-flow </li><li>justify-content</li><li>align-items</li><li>align-content</li></ol></blockquote><h3 id="1-1-flex-direction属性"><a href="#1-1-flex-direction属性" class="headerlink" title="1.1 flex-direction属性"></a>1.1 flex-direction属性</h3><p>flex-direction属性决定横轴的方向（即项目的排列方向）。</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.box</span> <span class="token punctuation">{</span>  <span class="token property">flex-direction</span><span class="token punctuation">:</span> row | row-reverse | column | column-reverse<span class="token punctuation">;</span><span class="token punctuation">}</span>row（默认值）：横轴为水平方向，起点在左端。row-reverse：横轴为水平方向，起点在右端。column：横轴为垂直方向，起点在上沿。column-reverse：横轴为垂直方向，起点在下沿。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> <img src="https://img-blog.csdnimg.cn/8b9e2a9b653f47ffa518fa5450e6db44.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAYWRtaW5femxq,size_20,color_FFFFFF,t_70,g_se,x_16#pic_left" alt="在这里插入图片描述"></p><h3 id="1-2-flex-wrap属性"><a href="#1-2-flex-wrap属性" class="headerlink" title="1.2 flex-wrap属性"></a>1.2 flex-wrap属性</h3><p>默认情况下，flex-item都排在一条线上。flex-wrap属性决定是否换行。</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.box</span><span class="token punctuation">{</span>  <span class="token property">flex-wrap</span><span class="token punctuation">:</span> nowrap | wrap | wrap-reverse<span class="token punctuation">;</span><span class="token punctuation">}</span>nowrap（默认）：不换行wrap：换行，第一行在上方。wrap-reverse：换行，第一行在下方。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>nowrap（默认）：<img src="https://img-blog.csdnimg.cn/337b2010f66948a28f237a3c56acfbf6.png#pic_left" alt="在这里插入图片描述">    </p><p>wrap：<br><img src="https://img-blog.csdnimg.cn/2867531d855040fd9166a1aa7bedd511.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAYWRtaW5femxq,size_20,color_FFFFFF,t_70,g_se,x_16#pic_left" alt="在这里插入图片描述">wrap-reverse：<br><img src="https://img-blog.csdnimg.cn/25f06d4ddde14fac8181dfa28613b333.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAYWRtaW5femxq,size_20,color_FFFFFF,t_70,g_se,x_16#pic_left" alt="在这里插入图片描述"></p><h3 id="1-3-flex-flow"><a href="#1-3-flex-flow" class="headerlink" title="1.3 flex-flow"></a>1.3 flex-flow</h3><p>flex-flow属性是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap。<br>也就是说为了方便<strong>flex-flow可以同时控制这两种属性</strong><br><strong>(具体传参形式比较繁琐，不推荐)</strong></p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.box</span> <span class="token punctuation">{</span>  <span class="token property">flex-flow</span><span class="token punctuation">:</span> &lt;flex-direction&gt; &lt;flex-wrap&gt;<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="1-4-justify-content属性"><a href="#1-4-justify-content属性" class="headerlink" title="1.4  justify-content属性"></a>1.4  justify-content属性</h3><p>justify-content属性定义了<strong>flex-item</strong>在<strong>横轴</strong>上的<strong>对齐方式</strong>。</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.box</span> <span class="token punctuation">{</span>  <span class="token property">justify-content</span><span class="token punctuation">:</span> flex-start | flex-end | center | space-between | space-around<span class="token punctuation">;</span><span class="token punctuation">}</span>flex-start（默认值）：左对齐flex-end：右对齐center： 居中space-between：两端对齐，项目之间的间隔都相等。space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/33895d61db914cca8456b2f0f48c1156.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAYWRtaW5femxq,size_20,color_FFFFFF,t_70,g_se,x_16#pic_left" alt="在这里插入图片描述"></p><h3 id="1-5-align-items属性"><a href="#1-5-align-items属性" class="headerlink" title="1.5 align-items属性"></a>1.5 align-items属性</h3><p>align-items属性定义项目在<strong>竖轴</strong>上如何对齐。</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.box</span> <span class="token punctuation">{</span>  <span class="token property">align-items</span><span class="token punctuation">:</span> flex-start | flex-end | center | baseline | stretch<span class="token punctuation">;</span><span class="token punctuation">}</span>flex-start：竖轴的起点对齐。flex-end：竖轴的终点对齐。center：竖轴的中点对齐。<span class="token property">baseline</span><span class="token punctuation">:</span> flex-item 的第一行文字的基线对齐。stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/5cd0f93350524fd3848e6920e6b24e55.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAYWRtaW5femxq,size_19,color_FFFFFF,t_70,g_se,x_16#pic_left" alt="在这里插入图片描述"></p><hr><h2 id="二、项目-flex-item-的属性"><a href="#二、项目-flex-item-的属性" class="headerlink" title="二、项目(flex-item)的属性"></a>二、项目(flex-item)的属性</h2><p>以下6个属性设置在项目上。</p><blockquote><ol><li>order</li><li>flex-grow</li><li>flex-shrink</li><li>flex-basis</li><li>flex</li><li>align-self</li></ol></blockquote><h3 id="2-1-order属性"><a href="#2-1-order属性" class="headerlink" title="2.1 order属性"></a>2.1 order属性</h3><p>order属性定义<strong>flex-item</strong>的排列顺序。数值越小，排列越靠前，默认为0。</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.item</span> <span class="token punctuation">{</span>  <span class="token property">order</span><span class="token punctuation">:</span> &lt;integer&gt;<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/3338441983d74c1fbe43f884364d0395.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAYWRtaW5femxq,size_20,color_FFFFFF,t_70,g_se,x_16#pic_left" alt="在这里插入图片描述"></p><h3 id="2-2-flex-grow属性"><a href="#2-2-flex-grow属性" class="headerlink" title="2.2 flex-grow属性"></a>2.2 flex-grow属性</h3><p>flex-grow属性定义flex-item的放大比例，默认为0。</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.item</span> <span class="token punctuation">{</span>  <span class="token property">flex-grow</span><span class="token punctuation">:</span> &lt;number&gt;<span class="token punctuation">;</span> <span class="token comment">/* default 0 */</span><span class="token punctuation">}</span>如果所有项目的flex-grow属性都为1，则它们将等分剩余空间（如果有的话）。如果一个项目的flex-grow属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/60e7a1ffd02a49f4aeaf7454f5d2c67f.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAYWRtaW5femxq,size_20,color_FFFFFF,t_70,g_se,x_16#pic_left" alt="在这里插入图片描述"></p><h3 id="2-3-flex-shrink属性"><a href="#2-3-flex-shrink属性" class="headerlink" title="2.3 flex-shrink属性"></a>2.3 flex-shrink属性</h3><p>flex-shrink属性定义了flex-item的缩小比例，默认为1。**(负值对该属性无效。)**<br>与放大类似，不赘述</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.item</span> <span class="token punctuation">{</span>  <span class="token property">flex-shrink</span><span class="token punctuation">:</span> &lt;number&gt;<span class="token punctuation">;</span> <span class="token comment">/* default 1 */</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="2-4-flex-basis属性"><a href="#2-4-flex-basis属性" class="headerlink" title="2.4 flex-basis属性"></a>2.4 flex-basis属性</h3><p>flex-basis属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为auto，即项目的本来大小。<br><strong>简单的说就是设置flex-item的宽度</strong></p><p><strong><font color="#FF7B57">flex布局中宽度的优先级:min-width/max-width  &gt;  flex-basis  &gt;  width  &gt;  内容支撑</font></strong></p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.item</span> <span class="token punctuation">{</span>  <span class="token property">flex-basis</span><span class="token punctuation">:</span> &lt;length&gt; | auto<span class="token punctuation">;</span> <span class="token comment">/* default auto */</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="2-5-flex属性"><a href="#2-5-flex属性" class="headerlink" title="2.5 flex属性"></a>2.5 flex属性</h3><p>flex属性是flex-grow, flex-shrink 和 flex-basis的简写。**(具体传参形式比较繁琐，不推荐)**</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.item</span> <span class="token punctuation">{</span>  <span class="token property">flex</span><span class="token punctuation">:</span> none | [ &lt;<span class="token string">'flex-grow'</span>&gt; &lt;<span class="token string">'flex-shrink'</span>&gt;? || &lt;<span class="token string">'flex-basis'</span>&gt; ]<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="2-6-align-self属性"><a href="#2-6-align-self属性" class="headerlink" title="2.6 align-self属性"></a>2.6 align-self属性</h3><p>align-self属性允许单个<strong>flex-item</strong>有与其他项目不一样的对齐方式，可覆盖align-items属性。</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.item</span> <span class="token punctuation">{</span>  <span class="token property">align-self</span><span class="token punctuation">:</span> auto | flex-start | flex-end | center | baseline | stretch<span class="token punctuation">;</span><span class="token punctuation">}</span>取值与align-items相同<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/d0a2a2131e6c4b81965c1096bf249216.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAYWRtaW5femxq,size_20,color_FFFFFF,t_70,g_se,x_16#pic_left" alt="在这里插入图片描述"></p><hr><p>​    </p><h2 id="三、九宫格案列"><a href="#三、九宫格案列" class="headerlink" title="三、九宫格案列"></a>三、九宫格案列</h2><blockquote><p><strong>学过flex布局，九宫格轻轻松松搞定！position，float 都不需要</strong></p><p><strong>相对于传统布局真的方便很多</strong></p></blockquote><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">        <span class="token selector">.flex-box</span>        <span class="token punctuation">{</span>            <span class="token property">width</span><span class="token punctuation">:</span> 500px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 500px<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>            <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>            <span class="token property">flex-wrap</span><span class="token punctuation">:</span> wrap<span class="token punctuation">;</span>            <span class="token property">justify-content</span><span class="token punctuation">:</span> space-evenly<span class="token punctuation">;</span>            <span class="token property">align-content</span><span class="token punctuation">:</span>space-evenly<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector">.flex-item</span>        <span class="token punctuation">{</span>            <span class="token property">width</span><span class="token punctuation">:</span> 150px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 150px<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector">.blue</span>        <span class="token punctuation">{</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector">.green</span>        <span class="token punctuation">{</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector">.orange</span>        <span class="token punctuation">{</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> orange<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>flex-box<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>flex-item orange<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>flex-item green<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>flex-item blue<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>flex-item green<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>flex-item blue<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>flex-item orange<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>flex-item blue<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>flex-item orange<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>flex-item green<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/9468253c896f4e99a0afd8e0aeb46ea9.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAYWRtaW5femxq,size_20,color_FFFFFF,t_70,g_se,x_16#pic_left" alt="在这里插入图片描述"></p><hr><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><blockquote><p><font color="#E33D10"><strong>本文参考菜鸟<a href="https://www.runoob.com/w3cnote/flex-grammar.html">https://www.runoob.com/w3cnote/flex-grammar.html</a> 编写，其中加入一些自己的想法，也有许多不同，也更加方便初学者理解</strong></font></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;传统布局&quot;&gt;&lt;a href=&quot;#传统布局&quot; class=&quot;headerlink&quot; title=&quot;传统布局&quot;&gt;&lt;/a&gt;传统布局&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;基于盒状模型，依赖 display属性 + position属性 + float属性&lt;/p&gt;
&lt;/li&gt;
</summary>
      
    
    
    
    <category term="笔记" scheme="https://admin-zlj.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="html" scheme="https://admin-zlj.github.io/tags/html/"/>
    
    <category term="前端" scheme="https://admin-zlj.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="css" scheme="https://admin-zlj.github.io/tags/css/"/>
    
    <category term="flex" scheme="https://admin-zlj.github.io/tags/flex/"/>
    
  </entry>
  
  <entry>
    <title>H5的新特性</title>
    <link href="https://admin-zlj.github.io/posts/d873d49c.html"/>
    <id>https://admin-zlj.github.io/posts/d873d49c.html</id>
    <published>2022-03-30T09:00:00.000Z</published>
    <updated>2022-03-30T09:42:08.775Z</updated>
    
    <content type="html"><![CDATA[<h1 id="HTML5新特性"><a href="#HTML5新特性" class="headerlink" title="HTML5新特性"></a>HTML5新特性</h1><p><strong>1.HTML5新特性（面试）</strong><br>            1）增加了audio和video音频播放，抛弃了Flash<br>            2）新增了canvas画布（绘画，制作动画（如小游戏开发等））<br>            3）地理定位<br>            4）增加了离线缓存<br>            5）硬件加速<br>            6）Web Socket（全双工通信）<br>            7）增加了本地存储<br>            8）新增了一些语义化标签</p><p><strong>2.网页布局标签</strong><br>            header:页首<br>            nav:导航栏<br>            aside:侧边栏<br>            main:主体<br>            section:区块<br>            article:文章<br>            footer:页尾</p><p><strong>3.语义化标签</strong><br>            1)mark:高亮显示(行级)<br>            2)details(描述)与summary(摘要):一般用于名词解释或用于封装一个区块等<br>            3)meter:定义度量衡<br>                        属性:value/min/max<br>            4)progress:进度条<br>                        属性:value/min/max<br>            5)dialog:对话框或窗口<br>            6)figure:用于对元素进行组合（一般用来组合一张图的标题、图片和图片描述等）</p><p><strong>4.HTML5多媒体</strong><br>            1)audio<br>                    播放音乐或音频。IE9以下的版本不支持。<br>                        a)支持的格式<br>                                .mp3/.ogg/.wav<br>                        b)属性<br>                                src:文件路径<br>                                autoplay:自动播放<br>                                loop:循环<br>                                controls:控制条<br>                                muted:静音<br>                                preload:预加载（当使用autoplay时，preload自动失效）<br>            2)video<br>                    加载视频。IE9以下的版本不支持。<br>                        a)支持的格式<br>                                .mp4/.ogg/.webm<br>                        b)属性<br>                                src:文件路径<br>                                autoplay:自动播放<br>                                loop:循环<br>                                controls:控制条<br>                                muted:静音<br>                                preload:预加载（当使用autoplay时，preload自动失效）<br>                                width:宽度<br>                                height:高度<br>                                poster:海报<br>            3)embed<br>                    嵌入内容或加载插件。<br>                        属性:<br>                                src:文件路径<br>                                width:宽度<br>                                height:高度<br>                                type:类型<br>            4)canvas<br>                    画布。是一个容器元素。<br>                    注意：<br>                            a.单独使用canvas没有什么意义，它必须结合Javascript使用。它的具体功能体现是通过Javascript体现现来的。<br>                            b.canvas的宽高最好不要通过css实现，而是直接使用标签属性width和height实现。</p><p><strong>5.HTML5常用属性</strong><br>            1）contentEditable<br>                    将标签转换为可编辑状态。可用于所有标签。它的值有true/false。<br>            2）hidden<br>                    对元素进行隐藏。一般用来传值或当某个条件成立，执行内容显示。默认值为hidden。<br>            3）data-*<br>                    用于存储页面或应用程序的私有自定义数据。一般用于传值。<br>            4）multiple<br>                    规定输入域中可选择多个内容。用于表单组件中，如file/select。<br>            5）required<br>                    约束表单元互在提交前必须输入值。用于表单组件中，需要结合提交按钮使用。<br>            6）pattern<br>                    用于验证输入字段的模式。用于表单组件中，需要结合提交按钮使用。</p><p><strong>6.表单组件</strong><br>            1）color：颜色<br>            2）email：邮箱<br>            3）tel：电话号码<br>            4）url：网址<br>            5）number：数字<br>            6）range：范围<br>            7）search：搜索<br>            8）date：日期<br>            9）datetime：日期时间<br>            10）datetime-local：本一日期时间<br>            11）year：年份<br>            12）month：月份<br>            13）time：时间</p><p><strong>7.表单属性</strong><br>            1）form-action:修改action数据提交的地方<br>            2）form-enctype:修改表单请求的类型<br>            3）form-method:修改数据提交的方法<br>            4）form:设置表单元素属于哪个表单<br>            5）novalidate:不验证</p><p><strong>8.input属性</strong><br>            1）autocomplete:自动完成<br>                        用来帮助用户输入，每一次输入的内容，浏览器是否保存输入的值，以备将来使用。值有：    on/off，默认为on。<br>            为了保护敏感数据（如用户帐号、密码等），避免本地浏览器对它们不安全存储，一般需要关闭。<br>            2）autofocus:自动获焦<br>            3）step:步长<br>            4）multiple:多选<br>            5）pattern:正则匹配<br>            6）placeholder:输入提示<br>            7）required:必须输入</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;HTML5新特性&quot;&gt;&lt;a href=&quot;#HTML5新特性&quot; class=&quot;headerlink&quot; title=&quot;HTML5新特性&quot;&gt;&lt;/a&gt;HTML5新特性&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;1.HTML5新特性（面试）&lt;/strong&gt;&lt;br&gt;           </summary>
      
    
    
    
    <category term="笔记" scheme="https://admin-zlj.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="html" scheme="https://admin-zlj.github.io/tags/html/"/>
    
    <category term="前端" scheme="https://admin-zlj.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>css3的新特性</title>
    <link href="https://admin-zlj.github.io/posts/a6d0cf2a.html"/>
    <id>https://admin-zlj.github.io/posts/a6d0cf2a.html</id>
    <published>2022-03-30T09:00:00.000Z</published>
    <updated>2022-03-30T09:42:22.006Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CSS3的新特性"><a href="#CSS3的新特性" class="headerlink" title="CSS3的新特性"></a>CSS3的新特性</h1><p><strong>1.CSS3是CSS2.1的一个升级版，它是对CSS的一个扩展。</strong></p><p><strong>2.CSS3的主要新特性：</strong><br>            1）选择器<br>            2）阴影<br>            3）形状转换（2D &lt;-&gt; 3D）<br>            4）变形<br>            5）动画（过渡动画、帧动画）<br>            6）边框<br>            7）多重背景<br>            8）反射<br>            9）文字<br>            10）颜色函数（rgba/hsl/hsla）<br>            11）滤镜（filter）<br>            12）弹性布局<br>            13）多列布局<br>            14）栅格布局<br>            15）盒模型<br>            16）Web字体<br>            17）媒体查询</p><p> <strong>3.CSS3不是属于浏览器或同一浏览器的不同版本都支持，所以需要兼容处理，通常的做法就是加厂商前缀。</strong><br>            1）主流浏览器内核（面试点）<br>                    a)Trident: IE内核<br>                    b)Webkit：Chrome和Safari内核<br>                    c)Gecko：FireFox内核<br>                    d)Blink（是Webkit的一个分支）： Chrome和Opera内核<br>            Tips（技巧）:目前国内的浏览器大多都是双核的（IE内核+Chrome内核）<br>            2）厂商前缀<br>                    IE： -ms-<br>                    Chrome&amp;Safari： -webkit-<br>                    FireFox： -moz-<br>                    Opera： -o-</p><p><strong>4.CSS3选择器</strong><br>           丰富选择的目的：在标签中减少class和id属性的使用。<br>            1）属性选择器<br>                    [属性名]<br>                [属性名=属性值]<br>                [属性名^=属性值]<br>                [属性名$=属性值]<br>                [属性名*=属性值]<br>            2）结构性伪类<br>                :first-child<br>                :last-child<br>                :nth-child(n)<br>                :nth-last-child(n)<br>                :nth-of-type(n)<br>                :nth-last-of-type(n)<br>                :only-child<br>                :only-of-type<br>                :empty<br>            3）目标伪类<br>                :target<br>            4）UI元素状态伪类<br>                :checked  (只在Opera浏览器中有效)<br>                :disabled<br>                :enabled<br>                :selection<br>            5）否定伪类<br>                :not()<br>            6）通用兄弟元素选择器</p><p> <strong>5.CSS3文本</strong><br>        1） 文本阴影（主流浏览器都支持，（IE9以上支持））<br>             text-shadow: 水平偏移距离 垂直偏移距离 [模糊距离] [阴影的尺寸] [颜色] [inset];<br>        2）文本自动换行（主流浏览器都支持）<br>             word-wrap: normal|break-word;<br>        3）单词拆分（主流浏览器都支持）<br>             word-break: normal|break-all|keep-all;<br>        4）文本拆分（所有主流浏览器都不支持）<br>            text-wrap: normal|none|unrestricted|suppress;<br>        5）文本溢出<br>            a)单行文本溢出（重要）<br>                text-overflow: clip|ellipsis|string;</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"> a)处理文字溢出样式：                width: px/%/em/rem...;                white-space: nowrap; /* 为允许折行 */                -ms-text-overflow: ellipsis; /* 处理IE兼容 */                text-overflow: ellipsis;                overflow: hidden;b)多行文本溢出（IE9以下的版本不支持，主要是谷歌支持）            width: px/%/em/rem...;            display: -webkit-box;            -webkit-box-orient: vertical;            -webkit-line-clamp: 行数;            overflow: hidden;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>6.CSS3边框</strong><br>            1）圆角边框（掌握）<br>                 border-radius: 1-4 length|% / 1-4 length|%;<br>                四个方位的词：top-left/top-right/bottom-left/bottom-right<br>            2）边框阴影（IE9以上支持）<br>                box-shadow: 水平偏移距离 垂直偏移距离 [模糊距离] [阴影的尺寸] [颜色] [inset];<br>            3）边框图片(IE11.0及以后版本支持）<br>                border-image：图片 向内偏移距离 宽度 图像区域超出边框的距离 重复效果;<br>                重复效果：round/strech/repeat</p><p><strong>7.CSS3背景</strong><br>            1）多重背景<br>                background: 背景色 背景图片 平铺方式 位置,背景色 背景图片 平铺方式 位置,…<br>            2）background-size：设定背景图像的尺寸。<br>                background-size: 固定长度|百分比值|cover|contain;<br>            3）background-origin：指定背景图像的位置区域。<br>                background-origin: padding-box|border-box|content-box;<br>            4）background-clip：设定背景的绘制区域。<br>                background-clip: border-box|padding-box|content-box;<br>            5）渐变背景<br>                background-image: 线性渐变｜径向渐变</p><p><strong>8.CSS3颜色函数</strong><br>            1）RGBA<br>                rgba(r,g,b,a)<br>                r:红色        取值范围：0-255/0-100%<br>                g:绿色        取值范围：0-255/0-100%<br>                b:蓝色        取值范围：0-255/0-100%<br>                a:不透明度    取值范围：0-1的一个小数<br>            2）HSL<br>                hsl(h,s,l)<br>                h:色调        取值范围：0-360<br>                s:饱和度      取值范围：0-100%<br>                l:亮度        取值范围：0-100%<br>            3）HSLA<br>                hsla(h,s,l,a)<br>                h:色调        取值范围：0-360<br>                s:饱和度      取值范围：0-100%<br>                l:亮度        取值范围：0-100%<br>                a:不透明度    取值范围：0-1的一个小数</p><p><strong>9.opacity</strong><br>            调整元素的不透明度，大多数情况下用于做元素的遮罩效果。取值范围：0-1的一个小数 IE8及8以下版本不支持opacity，处理兼容的方式，再添加一行代码来处理不透明度：filter:alpha(opacity=数值）    数值的范围：0-100</p><p><strong>10.CSS3渐变</strong><br>            渐变主要用来设置背景或制作三维图。<br>            1）线性渐变<br>                background: linear-gradient(方向或角度, 颜色1 百分比, 颜色2 百分比, …);<br>                方向：<br>                    to left:从右向左渐变<br>                    to right:从左向右渐变<br>                    to top:从下向上渐变<br>                    to bottom:从上向下渐变<br>                    to top left:从右下角向左上角渐变<br>                    to top right:从左下角向右上角渐变<br>                    to bottom left:从右上角向左下角渐变<br>                    to bottom right:从左上角向右下角渐变<br>                角度：<br>                    比如45度角，应该表示为：45deg<br>                颜色取值：<br>                    1）表示颜色的单词<br>                    2）16进制颜色<br>                    3）表示颜色的函数（rgb()/rgba()/hsl()/hsla()…)<br>            2）径向渐变(沿半径方向渐变）<br>                background: radial-gradient(形状 渐变大小 at 位置,颜色1 百分比, …, 颜色n 百分比);<br>                形状：<br>                    ellipse:椭圆径向渐变（默认）<br>                    circle:圆径向渐变<br>                渐变大小：<br>                    farthest-corner:渐变的半径长度为从圆心到离圆心最远的角（默认）<br>                    closest-side:渐变的半径长度为从圆心到离圆心最近的边<br>                    closest-corner:渐变的半径长度为从圆心到离圆心最近的角<br>                    farthest-side:渐变的半径长度为从圆心到离圆心最远的边<br>                位置：<br>                    center:设置圆心在中心位置（默认）<br>                    top:设置圆心在顶部位置<br>                    bottom:设置圆心在底部位置<br>                    at 圆心橫坐标 圆心纵坐标: 设定圆心的位置在指定的（橫坐标，纵坐标）处<br>            3）文字渐变<br>                background-image: 线性渐变或径向渐变;<br>                -webkit-background-clip: text;<br>                -webkit-text-fill-color: transparent;</p><p><strong>11.box-sizing</strong><br>            允许你以某种方式定义某些元素，以适应指定的区域。<br>            box-sizing: content-box/border-box （火狐和谷歌低版本需要厂商前缀）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;CSS3的新特性&quot;&gt;&lt;a href=&quot;#CSS3的新特性&quot; class=&quot;headerlink&quot; title=&quot;CSS3的新特性&quot;&gt;&lt;/a&gt;CSS3的新特性&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;1.CSS3是CSS2.1的一个升级版，它是对CSS的一个扩展。&lt;/stro</summary>
      
    
    
    
    <category term="笔记" scheme="https://admin-zlj.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="html" scheme="https://admin-zlj.github.io/tags/html/"/>
    
    <category term="前端" scheme="https://admin-zlj.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="css3" scheme="https://admin-zlj.github.io/tags/css3/"/>
    
  </entry>
  
  <entry>
    <title>我的第一篇博客</title>
    <link href="https://admin-zlj.github.io/posts/d95d7e09.html"/>
    <id>https://admin-zlj.github.io/posts/d95d7e09.html</id>
    <published>2022-03-28T13:00:00.000Z</published>
    <updated>2022-03-30T08:59:29.195Z</updated>
    
    <content type="html"><![CDATA[<p>相遇皆是缘分</p><h3 id="为什么建博客？"><a href="#为什么建博客？" class="headerlink" title="为什么建博客？"></a>为什么建博客？</h3><p>作为一个即将工作的大学生，我觉得建一个自己的博客来记录自己的学习过程就很nice！！！</p><h3 id="展望博客"><a href="#展望博客" class="headerlink" title="展望博客"></a>展望博客</h3><p>我会把自己学习过程的笔记和一些记忆犹新的<code>bug</code>上传到这里来。</p><p>拜拜</p><p>完结撒花</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;相遇皆是缘分&lt;/p&gt;
&lt;h3 id=&quot;为什么建博客？&quot;&gt;&lt;a href=&quot;#为什么建博客？&quot; class=&quot;headerlink&quot; title=&quot;为什么建博客？&quot;&gt;&lt;/a&gt;为什么建博客？&lt;/h3&gt;&lt;p&gt;作为一个即将工作的大学生，我觉得建一个自己的博客来记录自己的学习过程就很</summary>
      
    
    
    
    <category term="博主" scheme="https://admin-zlj.github.io/categories/%E5%8D%9A%E4%B8%BB/"/>
    
    
    <category term="blog" scheme="https://admin-zlj.github.io/tags/blog/"/>
    
  </entry>
  
</feed>
